[{"C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\index.js":"1","C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\App.js":"2","C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\component\\navigation\\NavbarComp.js":"3","C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\pages\\About.js":"4","C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\pages\\Home.js":"5","C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\component\\AddTodo.js":"6","C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\component\\todos.js":"7"},{"size":211,"mtime":1654644848174,"results":"8","hashOfConfig":"9"},{"size":282,"mtime":1654644848174,"results":"10","hashOfConfig":"9"},{"size":1329,"mtime":1654644848174,"results":"11","hashOfConfig":"9"},{"size":1231,"mtime":1654733199604,"results":"12","hashOfConfig":"9"},{"size":1503,"mtime":1654811270320,"results":"13","hashOfConfig":"9"},{"size":2272,"mtime":1654811767856,"results":"14","hashOfConfig":"9"},{"size":1500,"mtime":1654805679001,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"z23m1o",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\index.js",[],["34","35"],"C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\App.js",[],"C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\component\\navigation\\NavbarComp.js",["36"],"import React, { Component } from \"react\";\r\nimport {Navbar, Nav, NavDropdown, Container} from 'react-bootstrap'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route, \r\n    Link\r\n} from \"react-router-dom\"\r\nimport About from \"../../pages/About\";\r\nimport Home from \"../../pages/Home\";\r\n\r\nexport default class NavbarComp extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n            <div>\r\n            <Navbar bg=\"dark\" variant={\"dark\"} expand=\"lg\">\r\n                <Container>\r\n                    {/* <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand> */}\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link as={Link} to={\"/\"}> Home </Nav.Link>\r\n                        <Nav.Link as={Link} to={\"/about\"}>About</Nav.Link>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            </div>\r\n            <div>\r\n                <Routes>\r\n                <Route exact path=\"/\" element={<Home/>}/>\r\n                <Route exact path=\"/about\" element={<About/>}/>\r\n                </Routes>\r\n            </div>\r\n            </Router>\r\n        )\r\n    }\r\n}","C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\pages\\About.js",[],"C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\pages\\Home.js",["37"],"import React, { Component } from 'react';\r\nimport AddTodo from '../component/AddTodo';\r\nimport Todos from '../component/todos';\r\nimport HomeDesign from '../pages/Home.css'\r\n\r\nclass Home extends Component {\r\n  // A default state of this component with an empty list of todos.\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      // create your empty list here call it todos.\r\n      todos : []\r\n    };\r\n  }\r\n  // the addTodo function simply creates a new array that includes the user submitted todo item and then\r\n  // updates the state with the new list.\r\n  addTodo = (todo) => {\r\n    // In React, keys or ids in a list help identify which items have changed, been added or removed. Keys\r\n    // should not share duplicate values.\r\n    // To avoid having dup values, we use the Math.random() function to generate a random value for a todo id.\r\n    // This solution works for a small application but a more complex hashing function should be used when\r\n    // dealing with a larger data sensitive project.\r\n    todo.id = Math.random();\r\n    // An array that contains the current array and the new todo item\r\n    let new_list = [...this.state.todos, todo];\r\n    // Updates the local state with the new array.\r\n    this.setState({\r\n      todos: new_list,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <h1>Todo's </h1>\r\n        <Todos todos={this.state.todos}/>\r\n        <AddTodo addTodo={this.addTodo} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\component\\AddTodo.js",[],"C:\\Users\\alecr\\to-do-list_week1-alecrothenberg\\src\\component\\todos.js",["38","39","40"],"import React from \"react\";\r\nimport \"../component/todos.css\";\r\nimport {Card,CardContent,Grid,ListItemButton,ListItemText,Checkbox,} from \"@mui/material\"\r\n\r\n// 1. This component formats and returns the list of todos.\r\n// 2. Treat the question mark like an if statement.\r\n// If the todos array has items in the list [todos.length], we want to return the list\r\n// Else, return a message saying \"You have no todo's left\"\r\n// 3. The map function is called to assign each array item with a key\r\n// 4. Think of lines 14-23 as a loop. For each todo in the todo list, we want to give the list item\r\n// a key, and it's own card shown in the UI\r\nconst Todos = ({ todos }) => {\r\n    const todoList = todos.length ? (\r\n      todos.map((todo) => {\r\n        return (\r\n          <Grid key={todo.id}>\r\n            <Card>\r\n              {/* Remember, we set the local state of this todo item when the user submits the form in \r\n              AddTodo.js. All we need to do is return the todo list item */}\r\n              <CardContent>\r\n                <span style={{ padding: \"50px\" }}>{todo.content}</span>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })\r\n    ) : (\r\n      <p>You have no todo's left</p>\r\n    );\r\n    // Lastly, return the todoList constant that we created above to show all of the items on the screen.\r\n    return (\r\n      <div className=\"todoCollection\" style={{ padding: \"10px\" }}>\r\n        {todoList}\r\n      </div>\r\n    );\r\n};\r\n  \r\nexport default Todos;\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":22,"nodeType":"47","messageId":"48","endLine":2,"endColumn":33},{"ruleId":"45","severity":1,"message":"49","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":18},{"ruleId":"45","severity":1,"message":"50","line":3,"column":31,"nodeType":"47","messageId":"48","endLine":3,"endColumn":45},{"ruleId":"45","severity":1,"message":"51","line":3,"column":46,"nodeType":"47","messageId":"48","endLine":3,"endColumn":58},{"ruleId":"45","severity":1,"message":"52","line":3,"column":59,"nodeType":"47","messageId":"48","endLine":3,"endColumn":67},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'HomeDesign' is defined but never used.","'ListItemButton' is defined but never used.","'ListItemText' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]